Prolog
================================================
* The maze is made up of points.
* Each point is a list of two numbers (coordinate).
	- max and min are given by mazeSize(max, min).
* A coordinate can be a barrier; if it's not a barrier it's open.
* If it's open it can be part of a path.
* A barrier cannot be part of a path. 
* A move can be horizontal or vertical.
* You move by incrementing EITHER the X OR Y coordinate.
* You cannot increment both as that would be a diagonal move.

Issues
---------------
* First move depends on position of From, To. 
* To can be:	left/right of From
		above/below From
		at From
* How to make sure there's no infinite loop, i.e. maze has a solution?
* How to find the shortest path?  -- check out algos for this.

Plan
---------------
Solve the below mini maze (2x2): solve([1,1] , [2,2] , Path).
+-----+
| . X |
| . . |
+-----+
*	if targetX > startX : first move is right
	  else if targetX < startX : first move is left
	  else : first 
